/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

export interface Config {
  collections: {
    categories: Category;
    'multi-rich-text': MultiRichText;
    'localized-posts': LocalizedPost;
    'nested-field-collection': NestedFieldCollection;
    policies: Policy;
    posts: Post;
    'localized-posts-with-condition': LocalizedPostsWithCondition;
    tags: Tag;
    users: User;
    'crowdin-files': CrowdinFile;
    'crowdin-collection-directories': CrowdinCollectionDirectory;
    'crowdin-article-directories': CrowdinArticleDirectory;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  globals: {
    'localized-nav': LocalizedNav;
    nav: Nav;
    statistics: Statistic;
  };
}
export interface Category {
  id: string;
  name?: string | null;
}
export interface MultiRichText {
  id: string;
  field_0?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  field_1?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  field_2?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  field_3?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  field_4?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  field_5?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  field_6?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  field_7?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  field_8?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  field_9?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  field_10?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  syncTranslations?: boolean | null;
  syncAllTranslations?: boolean | null;
  crowdinArticleDirectory?: (string | null) | CrowdinArticleDirectory;
  updatedAt: string;
  createdAt: string;
}
export interface CrowdinArticleDirectory {
  id: string;
  excludeLocales?: ('de_DE' | 'fr_FR')[] | null;
  name?: string | null;
  crowdinCollectionDirectory?: (string | null) | CrowdinCollectionDirectory;
  crowdinFiles?: (string | CrowdinFile)[] | null;
  reference?: {
    createdAt?: string | null;
    updatedAt?: string | null;
    projectId?: number | null;
  };
  originalId?: number | null;
  directoryId?: number | null;
  updatedAt: string;
  createdAt: string;
}
export interface CrowdinCollectionDirectory {
  id: string;
  name?: string | null;
  title?: string | null;
  collectionSlug?: string | null;
  reference?: {
    createdAt?: string | null;
    updatedAt?: string | null;
    projectId?: number | null;
  };
  originalId?: number | null;
  directoryId?: number | null;
  updatedAt: string;
  createdAt: string;
}
export interface CrowdinFile {
  id: string;
  title?: string | null;
  field?: string | null;
  crowdinArticleDirectory?: (string | null) | CrowdinArticleDirectory;
  reference?: {
    createdAt?: string | null;
    updatedAt?: string | null;
    projectId?: number | null;
  };
  originalId?: number | null;
  directoryId?: number | null;
  revisionId?: number | null;
  name?: string | null;
  type?: string | null;
  path?: string | null;
  fileData?: {
    json?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
    html?: string | null;
  };
  updatedAt: string;
  createdAt: string;
}
export interface LocalizedPost {
  id: string;
  title?: string | null;
  author?: (string | null) | User;
  publishedDate?: string | null;
  category?: (string | null) | Category;
  tags?: (string | Tag)[] | null;
  content?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  status?: ('draft' | 'published') | null;
  syncTranslations?: boolean | null;
  syncAllTranslations?: boolean | null;
  crowdinArticleDirectory?: (string | null) | CrowdinArticleDirectory;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
export interface User {
  id: string;
  name?: string | null;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password: string | null;
}
export interface Tag {
  id: string;
  name?: string | null;
}
export interface NestedFieldCollection {
  id: string;
  title?: string | null;
  textField?: string | null;
  richTextField?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  textareaField?: string | null;
  arrayField?:
    | {
        textField?: string | null;
        richTextField?:
          | {
              [k: string]: unknown;
            }[]
          | null;
        textareaField?: string | null;
        id?: string | null;
      }[]
    | null;
  layout?:
    | (
        | {
            textField?: string | null;
            richTextField?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            textareaField?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'basicBlock';
          }
        | {
            textField?: string | null;
            richTextField?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            textareaField?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'basicBlockNonLocalized';
          }
        | {
            richTextField?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'basicBlockRichText';
          }
        | {
            textField?: string | null;
            richTextField?:
              | {
                  [k: string]: unknown;
                }[]
              | null;
            textareaField?: string | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'basicBlockMixed';
          }
        | {
            title?: string | null;
            messages?:
              | {
                  title?: string | null;
                  message?:
                    | {
                        [k: string]: unknown;
                      }[]
                    | null;
                  id?: string | null;
                }[]
              | null;
            id?: string | null;
            blockName?: string | null;
            blockType: 'testBlockArrayOfRichText';
          }
      )[]
    | null;
  group?: {
    textField?: string | null;
    richTextField?:
      | {
          [k: string]: unknown;
        }[]
      | null;
    textareaField?: string | null;
  };
  tabOneTitle?: string | null;
  tabOneContent?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  tabTwo: {
    tabTwoTitle?: string | null;
    tabTwoContent?:
      | {
          [k: string]: unknown;
        }[]
      | null;
  };
  syncTranslations?: boolean | null;
  syncAllTranslations?: boolean | null;
  crowdinArticleDirectory?: (string | null) | CrowdinArticleDirectory;
  updatedAt: string;
  createdAt: string;
}
export interface Policy {
  id: string;
  title?: string | null;
  content?: {
    root: {
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      type: string;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  group?: {
    array?:
      | {
          title?: string | null;
          content?: {
            root: {
              children: {
                type: string;
                version: number;
                [k: string]: unknown;
              }[];
              direction: ('ltr' | 'rtl') | null;
              format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
              indent: number;
              type: string;
              version: number;
            };
            [k: string]: unknown;
          } | null;
          id?: string | null;
        }[]
      | null;
  };
  syncTranslations?: boolean | null;
  syncAllTranslations?: boolean | null;
  crowdinArticleDirectory?: (string | null) | CrowdinArticleDirectory;
  updatedAt: string;
  createdAt: string;
}
export interface Post {
  id: string;
  title?: string | null;
  author?: (string | null) | User;
  publishedDate?: string | null;
  category?: (string | null) | Category;
  tags?: (string | Tag)[] | null;
  content?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  status?: ('draft' | 'published') | null;
  updatedAt: string;
  createdAt: string;
}
export interface LocalizedPostsWithCondition {
  id: string;
  title?: string | null;
  translateWithCrowdin?: boolean | null;
  author?: (string | null) | User;
  publishedDate?: string | null;
  category?: (string | null) | Category;
  tags?: (string | Tag)[] | null;
  content?:
    | {
        [k: string]: unknown;
      }[]
    | null;
  status?: ('draft' | 'published') | null;
  syncTranslations?: boolean | null;
  syncAllTranslations?: boolean | null;
  crowdinArticleDirectory?: (string | null) | CrowdinArticleDirectory;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
export interface PayloadPreference {
  id: string;
  user: {
    relationTo: 'users';
    value: string | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
export interface PayloadMigration {
  id: string;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
export interface LocalizedNav {
  id: string;
  items: {
    label?: string | null;
    id?: string | null;
  }[];
  syncTranslations?: boolean | null;
  syncAllTranslations?: boolean | null;
  crowdinArticleDirectory?: (string | null) | CrowdinArticleDirectory;
  updatedAt?: string | null;
  createdAt?: string | null;
}
export interface Nav {
  id: string;
  items: {
    label?: string | null;
    id?: string | null;
  }[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
export interface Statistic {
  id: string;
  users?: {
    text?: string | null;
    number?: number | null;
  };
  countries?: {
    text?: string | null;
    number?: number | null;
  };
  syncTranslations?: boolean | null;
  syncAllTranslations?: boolean | null;
  crowdinArticleDirectory?: (string | null) | CrowdinArticleDirectory;
  _status?: ('draft' | 'published') | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
